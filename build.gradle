import org.gradle.api.artifacts.maven.MavenDeployment

/*
 * Copyright (c) 2014 - David Buschman
 * Copyright (c) 2008 - 2013 10gen, Inc. <http://10gen.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'eclipse'

group = 'me.lightspeed7'
version = '0.7.0'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories{
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile 'org.mongodb:mongo-java-driver:2.11.4'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.google.guava:guava:16.0.1'   
    testCompile 'com.google.code.gson:gson:2.2.4'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.10"
}

project.ext.mavenDeployers = []

def pom = { config ->
    project.mavenDeployers*.pom config
}

install {
    project.mavenDeployers << repositories.mavenInstaller
}

uploadArchives {
	repositories.mavenDeployer {
        repository(url: "file:///Users/dbusch/dev/dbuschman7/mvn-repo/")
    }
}

pom {
    project {

        name 'MongoFS'
        description =
        '''
        An extension to the MongoDB Java Driver library that goes beyond what the GridFS feature supports.
        Compressed file storage, zip files, temporary files
        '''
        url 'http://github.com/dbuschman7/mongoFS'
        scm {
            url 'git@github.com:dbuschman7/mongoFS.git'
            connection 'scm:git:git@github.com:dbuschman7/mongoFS.git'
            developerConnection 'scm:git:git@github.com:dbuschman7/mongoFS.git'

        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'dbuschman7'
                name 'David Buschman'
                url = 'http://github.com/dbuschman7'
            }
        }
    }
}
